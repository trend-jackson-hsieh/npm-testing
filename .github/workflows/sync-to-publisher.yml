name: Sync package to public publisher repo

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: read

env:
  # Directory where files to publish will be staged
  PUBLISH_DIR: "publish"
  # Publisher repo (public, non-EMU)
  PUBLISHER_SSH: "git@github.com:trend-jackson-hsieh/npm-testing.git"
  # Whitelisted files to include in publish payload
  PUBLISH_FILES: "package.json README.md LICENSE index.js"

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (EMU repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install deps
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install --no-audit --fund=false
          fi

      - name: Build project
        run: npm run build --if-present

      # Collect files into publish/ (using whitelist + optional dist/)
      - name: Prepare publish payload
        run: |
          rm -rf "${PUBLISH_DIR}"
          mkdir -p "${PUBLISH_DIR}"

          for f in ${PUBLISH_FILES}; do
            if [ -f "$f" ]; then
              cp -v "$f" "${PUBLISH_DIR}/"
            else
              echo "Skipping missing file: $f"
            fi
          done

          if [ -d dist ]; then
            mkdir -p "${PUBLISH_DIR}/dist"
            cp -rv dist/* "${PUBLISH_DIR}/dist/"
          fi

          echo "Prepared content:"
          ls -R "${PUBLISH_DIR}"

      - name: Verify tag === package.json version
        run: |
          TAG="${GITHUB_REF##*/}"
          PKG_VER="$(node -p "require('./${PUBLISH_DIR}/package.json').version")"
          [ "$TAG" = "v$PKG_VER" ] || { echo "Tag $TAG != $PKG_VER"; exit 1; }

      - name: Configure SSH
        env:
          DEPLOY_KEY: ${{ secrets.PUBLISHER_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${DEPLOY_KEY}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
          git config --global user.name  "release-bot"
          git config --global user.email "release-bot@users.noreply.github.com"

      - name: Sync & push to publisher repo
        run: |
          TAG="${GITHUB_REF##*/}"
          WORKDIR="$(mktemp -d)"
          git clone "${PUBLISHER_SSH}" "${WORKDIR}"
          cd "${WORKDIR}"

          rsync -av --delete "${GITHUB_WORKSPACE}/${PUBLISH_DIR}/" ./

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Release ${TAG}"
          fi

          if git rev-parse -q --verify "refs/tags/${TAG}"; then
            git tag -d "${TAG}"
          fi
          git tag "${TAG}"

          CURRENT_BRANCH="$(git symbolic-ref --short HEAD || echo main)"
          git push origin "${CURRENT_BRANCH}"
          git push --force origin "refs/tags/${TAG}"

          echo "Synced ${TAG} to publisher repo"
